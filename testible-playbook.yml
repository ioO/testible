---
# Run ansible-playbook testible-playbook.yml --extra-vars='{"vm": "vm", "snapshot": "snapshot", "playbook": "playbook name"}'
# vm        : is the name of your vm in inventory
# snapshot  : is the name of the snapshot to use
# playbook  : is the name of the playbook to include for test

- name: A Playbook to test yours
  hosts: localhost
  tasks:
  - include_vars:
      # include vars of your vm
      file: "host_vars/{{ vm }}"
      name: testible
  - name: "Create entry in local .ssh/config"
    blockinfile:
      dest: "/home/{{ host.user.local }}/.ssh/config"
      # Add unique marker for each host because ansible will rewrite block with same marker
      marker: "# {mark} ANSIBLE MANAGED BLOCK FOR {{ testible.host.alias.lan }}"
      block: |
        Host {{ testible.host.alias.lan }}
          HostName {{ testible.host.ip.lan }}
          User {{ testible.host.ssh.user }}
          ChallengeResponseAuthentication no
          PasswordAuthentication yes
          Port 22
          ServerAliveCountMax 3
          ServerAliveInterval 30
          TCPKeepAlive no
          StrictHostKeyChecking no

  # Restore know vm state
  - name: Set vm to snapshot state
    command: "VBoxManage snapshot {{ testible.host.vbox.uuid }} restore {{ testible.host.vbox.snapshots[snapshot] }}"

  # Start the vm
  - name: Start the vm
    command: "VBoxManage startvm {{ testible.host.vbox.uuid }}"

  # Wait for ssh service is started so we can test the playbook
  - name: Wait for ssh in vm
    wait_for:
      host: "{{ testible.host.ip.lan }}"
      port: 22
      state: present
      delay: 5

# include the playbook to test
- name: "Include the playbook to test"
  include: "{{ playbook }}"

- name: Tasks to shutdown the vm and clean localhost
  hosts: localhost
  tasks:

  # Shutdown the vm for tests use acpipowerbutton because poweroff loose files
  - name: Shutdown the vm
    command: "VBoxManage controlvm {{ testible.host.vbox.uuid }} acpipowerbutton"

  - name: "Remove entry in local .ssh/config"
    blockinfile:
      dest: "/home/{{ host.user.local }}/.ssh/config"
      marker: "# {mark} ANSIBLE MANAGED BLOCK FOR {{ testible.host.alias.lan }}"
      state: absent

  - name: "Remove host ip in .ssh/known_hosts"
    lineinfile:
      dest: "/home/{{ host.user.local }}/.ssh/known_hosts"
      state: absent
      regexp: "^{{ testible.host.ip.lan }} .*"
